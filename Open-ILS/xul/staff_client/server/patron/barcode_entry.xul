<?xml version="1.0"?>
<!-- Application: Evergreen Staff Client -->
<!-- Screen: Retrieve Patron By Barcode -->

<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
<!-- STYLESHEETS -->
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="/xul/server/skin/global.css" type="text/css"?>

<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
<!-- LOCALIZATION -->
<!DOCTYPE window PUBLIC "" ""[
    <!--#include virtual="/opac/locale/${locale}/lang.dtd"-->
]>

<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
<!-- OVERLAYS -->
<?xul-overlay href="/xul/server/OpenILS/util_overlay.xul"?>

<window id="patron_barcode_entry_win" 
    onload="try { my_init(); font_helper(); persist_helper(); } catch(E) { alert(E); }"
    xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

    <!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
    <!-- BEHAVIOR -->
        <script type="text/javascript">var myPackageDir = 'open_ils_staff_client'; var IAMXUL = true; var g = {};</script>
        <scripts id="openils_util_scripts"/>

    <script type="text/javascript" src="/xul/server/main/JSAN.js"/>
    <script>
    <![CDATA[
        function $(id) { return document.getElementById(id); }
        
        function my_init() {
            try {
                netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
            if (typeof JSAN == 'undefined') { throw( $("commonStrings").getString('common.jsan.missing') ); }
                JSAN.errorLevel = "die"; // none, warn, or die
                JSAN.addRepository('/xul/server/');
                JSAN.use('util.error'); g.error = new util.error();
                g.error.sdump('D_TRACE','my_init() for patron/barcode_entry.xul');

                JSAN.use('OpenILS.data'); g.data = new OpenILS.data(); g.data.init({'via':'stash'});

                /*var tb = document.getElementById('barcode_tb');
                tb.addEventListener(
                    'keypress',
                    function(ev) {
                        if (ev.keyCode == 13 || ev.keyCode == 77) {
                            setTimeout(
                                function() {
                                    submit();
                                }, 0
                            );
                        }
                    },
                    false
                );
                tb.focus();
*/

                var nec = document.getElementById('barcode_nec');
                nec.focus();
                nec.onkeyup = function() {
                    if (document.getElementById('barcode_nec').length!=0) {
                        nec_scan_listener(function(){submit_sedar_nec();},1000);
                    }
                }

                if (typeof window.xulG == 'object' && typeof window.xulG.set_tab_name == 'function') {
                    if (xul_param('perm_editor')) {
                        try { window.xulG.set_tab_name($("patronStrings").getString('staff.patron.barcode_entry.user_permission_editor')); } catch(E) { alert(E); }
                    } else {
                        try { window.xulG.set_tab_name($("patronStrings").getString('staff.patron.barcode_entry.check_out')); } catch(E) { alert(E); }
                    }
                }

                if (xul_param('error')) { 
                    var error = xul_param('error');
                    alert(error);
                }

            } catch(E) {
                var err_msg = $("commonStrings").getFormattedString('common.exception', ['patron/barcode_entry.xul', E]);
                try { g.error.sdump('D_ERROR',err_msg); } catch(E) { dump(err_msg); }
                alert(err_msg);
            }
        }

        var nec_scan_listener = function(){
            var timer = 0;
            return function(callback, ms){
                clearTimeout (timer);
                timer = setTimeout(callback, ms);
            }
        }();

        function submit_sedar_nec() {
            var nec;
            nec = document.getElementById('barcode_nec');
            var cardstring = nec.value;
            if (cardstring.length==0) {return false;}
            if (cardstring.length==14) {submit();}
            try {
                JSAN.use('util.sound'); var sound = new util.sound();

                JSAN.use('util.network'); var net = new util.network();
                nec.disabled=true;
                document.getElementById('progress').setAttribute('hidden','false');

                net.simple_request('FM_CHECK_SEDAR_NEC_CARD',[ ses(), cardstring ],
                    function(req) {
                        document.getElementById('progress').setAttribute('hidden','true');
                        nec.disabled = false; nec.select(); nec.focus(); ;
                        var robj = req.getResultObject();
                        if (typeof robj.ilsevent != 'undefined') {
                            sound.bad();
                            alert('error: undefined');
                            clear_nec_scan();
                            return;
                            }
                            else
                            {
                            switch((robj.sedar_card_flag)) {
                            case 'found_detail_change':
                                    clear_nec_scan();
                                    sound.good();
                                    nec_data_update(robj.userid,robj.borrower.first_given_name,robj.borrower.family_name,robj.borrower.nec_number,robj.borrower.dob,
                                     robj.borrower.address,robj.borrower.postcode,robj.borrower.phone,robj.db_borrower.first_given_name,robj.db_borrower.family_name,
                                     robj.db_borrower.dob,robj.db_borrower.address,robj.db_borrower.postcode,robj.db_borrower.phone,robj.db_fleshed,robj.upd_addr);
                                    break;
                                case 'found':
                                    clear_nec_scan();
                                    sound.good();
                                    spawn(robj.barcode);
                                    break;
                                case 'found_old_card':
                                    clear_nec_scan();
                                    alert('Expired card\n\nNew NEC card number: '+robj.barcode);
                                    sound.good();
                                    spawn(robj.barcode);
                                    break;
                                case 'not_found_add':
                                    clear_nec_scan();
                                    sound.good();
                                    nec_new_patron(robj.borrower.first_given_name,robj.borrower.family_name,robj.borrower.nec_number,robj.borrower.dob,robj.borrower.address,
                                    robj.borrower.postcode,robj.borrower.phone);
                                    break;
                                case 'not_found_matches':
                                    clear_nec_scan();
                                    alert('Patron not found - searching for matches...\n\nNEC card number: '+robj.nec_number);
                                    sound.good();
                                    nec_match_search(robj.search_hash);
                                    break;
                                case "badscan":
                                    sound.bad();
                                    add_msg($("patronStrings").('Invalid patron NEC scan'));
                                    clear_nec_scan;
                                    return;
                                default:
                                    add_msg($("patronStrings").getFormattedString('staff.patron.barcode_entry.barcode_retrieval_problem', [barcode, js2JSON(robj)]));
                                    clear_nec_scan();
                            }
                        }
                    }
                );

        } catch(E) {
                nec.select(); nec.focus();
                g.error.standard_unexpected_error_alert('barcode_entry.xul',E);
            }
        }

        function clear_nec_scan() {
            var nec = document.getElementById('barcode_nec');
            nec.value='';
        }

        function submit() {
            var tb;
            try {
                JSAN.use('util.sound'); var sound = new util.sound();
                tb = document.getElementById('barcode_nec');
                var barcode = tb.value;

                barcode = String( barcode ).replace( /\s+/g, '' );

                if (!barcode) { sound.bad(); add_msg($("patronStrings").getString('staff.patron.barcode_entry.no_barcode')); tb.select(); tb.focus(); return; }

                JSAN.use('util.network'); var net = new util.network();

                tb.disabled = true;
                document.getElementById('progress').setAttribute('hidden','false');
                net.simple_request('FM_AU_ID_RETRIEVE_VIA_BARCODE_OR_USERNAME',[ ses(), barcode, null ],
                    function(req) {
                        document.getElementById('progress').setAttribute('hidden','true');
                        tb.disabled = false; tb.select(); tb.focus(); ;
                        var robj = req.getResultObject();
                        if (typeof robj.ilsevent != 'undefined') {
                            sound.bad();
                            switch(Number(robj.ilsevent)) {
                                case 1002 /* ACTOR_USER_NOT_FOUND */: 
                                    add_msg($("patronStrings").getFormattedString('staff.patron.barcode_entry.barcode_not_found', [barcode]));
                                break;
                                default:
                                    add_msg($("patronStrings").getFormattedString('staff.patron.barcode_entry.barcode_retrieval_problem', [barcode, js2JSON(robj)]));
                            }
                            return;
                        }

                        if (g.data.user_org_unit_opt_in_enabled) {
                            var r = net.simple_request('USER_ORG_UNIT_OPT_IN_CHECK',[ ses(), robj ]);
                            if (typeof r.ilsevent != 'undefined') {
                                throw(r);
                            } else {

                                if (r == 0) {

                                    JSAN.use('patron.util');
                                    var parts = patron.util.retrieve_name_via_id( ses(), robj );
    
                                    if (0 != g.error.yns_alert(
                                            $("patronStrings").getFormattedString('staff.patron.barcode_entry.consent_from_patron',
                                                [parts[0], parts[1] + (parts[2] ? ' ' + parts[2] : ''), g.data.hash.aou[ parts[3] ].name(), g.data.hash.aou[ parts[3] ].shortname()]),
                                            $("patronStrings").getString('staff.patron.barcode_entry.patron_consent_title'),
                                            $("patronStrings").getString('staff.patron.barcode_entry.patron_consent_accept'),
                                            $("patronStrings").getString('staff.patron.barcode_entry.patron_consent_deny'), null,
                                            $("patronStrings").getString('staff.patron.barcode_entry.patron_consent_confirm')
                                        )
                                    ) {
                                        tb.select(); tb.focus();
                                        return;
                                    } else {
                                        var c = net.simple_request('USER_ORG_UNIT_OPT_IN_CREATE',[ ses(), robj ]);
                                        if (typeof c.ilsevent != 'undefined') throw(r);
                                    }
                                }
    
                                sound.good();
                                spawn(barcode);
                            }
                        } else {
                            sound.good();
                            spawn(barcode);
                        }
                    }
                );
            } catch(E) {
                tb.select(); tb.focus();
                g.error.standard_unexpected_error_alert('barcode_entry.xul',E);
            }
        }

        function add_msg(text) {
            var x = document.getElementById('status');
            var d = document.createElement('description');
            x.appendChild(d);
            d.appendChild( document.createTextNode( text ) );
            d.setAttribute('style','color: red');
        }

        function spawn(barcode) {
            if (xul_param('perm_editor')) { spawn_perm_editor(barcode); } else { spawn_checkout(barcode); }
        }

        function nec_match_search(search_hash) {
            try {

                var horizontal_interface = String( g.data.hash.aous['ui.circ.patron_summary.horizontal'] ) == 'true';
                var loc = xulG.url_prefix( horizontal_interface ? urls.XUL_PATRON_DISPLAY : urls.XUL_PATRON_DISPLAY );
                if (typeof window.xulG == 'object' && typeof window.xulG.set_tab == 'function') {
                    window.xulG.set_tab( loc, {}, {"doit":1, "query":js2JSON({"family_name": search_hash.family_name.value, "first_given_name": search_hash.first_given_name.value, "dob": search_hash.dob.value, "inactive": "true", "search_depth": "0"})} );
                } else {
                    location.href = loc + '?family_name=dickie';
                }
            } catch(E) {
                g.error.standard_unexpected_error_alert($("patronStrings").getString('staff.patron.barcode_entry.patron_display_error'),E);
            }

        }

        function nec_data_update(id,first_given_name,family_name,nec_number,dob,address,postcode,phone,db_first_given_name,db_family_name,
                                    db_dob,db_address,db_postcode,db_phone,db_fleshed,upd_addr) {
        try {

                var horizontal_interface = String( g.data.hash.aous['ui.circ.patron_summary.horizontal'] ) == 'true';
                var loc = xulG.url_prefix( horizontal_interface ? urls.XUL_SEDAR_NEC_DATA_UPDATE : urls.XUL_SEDAR_NEC_DATA_UPDATE );
                if (typeof window.xulG == 'object' && typeof window.xulG.set_tab == 'function') {
                    window.xulG.set_tab( loc, {}, {"id":id,"first_given_name":first_given_name,"family_name":family_name,
                     "nec_number":nec_number,"dob":dob,"address":address,"postcode":postcode,"phone":phone,
                     "db_first_given_name":db_first_given_name,"db_family_name":db_family_name,"db_id":id,
                     "db_nec_number":nec_number,"db_dob":db_dob,"db_address":db_address,"db_postcode":db_postcode,"db_phone":db_phone,"db_fleshed":db_fleshed,"upd_addr":upd_addr} );
                } else {
                    location.href = loc + '?family_name=dickie';
                }
            } catch(E) {
                g.error.standard_unexpected_error_alert($("patronStrings").getString('staff.patron.barcode_entry.patron_display_error'),E);
            }
        }

        function spawn_search(s) {
                                    obj.error.sdump('D_TRACE', 'Editor would like to search for: ' + js2JSON(s));
                                    obj.OpenILS.data.stash_retrieve();
                                    xulG.new_patron_tab( {}, { 'doit' : 1, 'query' : js2JSON(s) } );
                                }

                                function spawn_editor(p) {
                                    var url = urls.XUL_PATRON_EDIT;
                                    var loc = xulG.url_prefix( urls.XUL_REMOTE_BROWSER ); // + '?url=' + window.escape( url );
                                    xulG.new_tab(
                                        loc,
                                        {},
                                        {
                                            'url' : url,
                                            'show_print_button' : true,
                                            'tab_name' : $("patronStrings").getString('staff.patron.display.spawn_editor.editing_related_patron'),
                                            'passthru_content_params' : {
                                                'spawn_search' : spawn_search,
                                                'spawn_editor' : spawn_editor,
                                                'url_prefix' : function(url) { return xulG.url_prefix(url); },
                                                'get_new_session' : function(a) { return xulG.get_new_session(a); },
                                                'new_tab' : function(a,b,c) { return xulG.new_tab(a,b,c); },
                                                'new_patron_tab' : function(a,b) { return xulG.new_patron_tab(a,b); },
                                                'params' : p,
                                                'on_save' : function(p_obj) {
                                                    JSAN.use('patron.util');
                                                    patron.util.work_log_patron_edit(p_obj);
                                                }
                                            }
                                        }
                                    );
                                }

        function nec_new_patron(first_given_name,family_name,nec_number,dob,address,postcode,phone) {
                        var url = urls.XUL_PATRON_EDIT;
                        url+="?first_given_name="+first_given_name+"&family_name="+family_name+"&nec_number="+nec_number+
                            "&dob="+dob+"&address="+address+"&postcode="+postcode+"&phone="+phone+"&sedar_refresh=1";
                        var loc=xulG.url_prefix(urls.XUL_BROWSER)+'?url='+window.escape(xulG.url_prefix(url));

                        xulG.new_tab(
                            loc,
                            {},
                            {
                                'show_print_button' : true,
                                'passthru_content_params' : {
                                'params' : {
                                            'ses' : ses(),
                                            'first_given_name' : first_given_name,
                                            'family_name' : family_name,
                                            'nec_number' : nec_number,
                                            'dob' : dob,
                                            'address' : address,
                                            'postcode' : postcode,
                                            'phone' : phone,
                                            'sedar_refresh' : 1,

                                        },
                                    'spawn_search' : spawn_search,
                                    'spawn_editor' : spawn_editor,
                                }
                            }
                        );
                    }

        function spawn_checkout(barcode) {
            try {
                var horizontal_interface = String( g.data.hash.aous['ui.circ.patron_summary.horizontal'] ) == 'true';
                var loc = xulG.url_prefix( horizontal_interface ? urls.XUL_PATRON_HORIZ_DISPLAY : urls.XUL_PATRON_DISPLAY );
                if (typeof window.xulG == 'object' && typeof window.xulG.set_tab == 'function') {
                    window.xulG.set_tab( loc, {}, { 'barcode' : barcode } );
                } else {
                    location.href = loc + '?barcode=' + window.escape(barcode);
                }
            } catch(E) {
                g.error.standard_unexpected_error_alert($("patronStrings").getString('staff.patron.barcode_entry.patron_display_error'),E);
            }
        }

        function spawn_perm_editor(barcode) {
            try {
                JSAN.use('patron.util'); var patron_obj = patron.util.retrieve_fleshed_au_via_barcode( ses(), barcode );
                var loc = urls.XUL_USER_PERM_EDITOR + '?ses=' + window.escape(ses()) + '&usr=' + patron_obj.id();
                if (typeof window.xulG == 'object' && typeof window.xulG.set_tab == 'function') {
                    window.xulG.set_tab( loc, {}, {} );
                } else {
                    location.href = loc;
                }
            } catch(E) {
                g.error.standard_unexpected_error_alert($("patronStrings").getString('staff.patron.barcode_entry.user_perm_display_error'),E);
            }
        }


        function default_focus() { try { setTimeout( function() { document.getElementById('barcode_nec').focus(); }, 0); } catch(E) {} }
    ]]>
    </script>
    
    <messagecatalog id="patronStrings" src="/xul/server/locale/<!--#echo var='locale'-->/patron.properties" />

    <vbox flex="1" class="my_overflow">
        <groupbox orient="vertical" flex="1">
            <caption label="&staff.pat.barcode_entry.retrieve_patron.label;" />
            <hbox>
                <label value="Scan patron card" accesskey="P" control="barcode_nec"/>
                <textbox id="barcode_nec"  context="clipboard" type="password" size="8"/>
                <button label="Check patron details" accesskey="C" oncommand="submit_sedar_nec();"/>
            </hbox>
            <!--<hbox>
                <label value="&staff.pat.barcode_entry.barcode.label;" accesskey="&staff.pat.barcode_entry.barcode.accesskey;" control="barcode_tb"/>
                <textbox id="barcode_tb"  context="clipboard"/>
                <button label="&staff.pat.barcode_entry.submit_btn.label;" accesskey="&staff.pat.barcode_entry.submit_btn.accesskey;" oncommand="submit();"/>
            </hbox>-->
            <label value="&staff.pat.barcode_entry.retrieving.label;" style="color: green" id="progress" hidden="true"/>
            <vbox id="status">
            </vbox>
        </groupbox>
    </vbox>

</window>

